name: Build luci-app-xray

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential clang flex bison g++ gawk gcc-multilib \
            gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget

      - name: Download OpenWrt SDK
        run: |
          wget https://downloads.immortalwrt.org/snapshots/targets/mediatek/filogic/immortalwrt-sdk-mediatek-filogic_gcc-14.3.0_musl.Linux-x86_64.tar.zst
          tar -I zstd -xf immortalwrt-sdk-mediatek-filogic_gcc-14.3.0_musl.Linux-x86_64.tar.zst
          mv immortalwrt-sdk-*/ sdk

      - name: Prepare luci-app-xray package
        run: |
          mkdir -p sdk/package/luci-app-xray
          cd sdk/package/luci-app-xray
          git clone https://github.com/yichya/luci-app-xray.git temp
          
          # 将 status 目录内容作为 package 文件
          mv temp/status/* .
          rm -rf temp
          
          # 创建必要的 Makefile（最小化示例）
          cat > Makefile << 'EOF'
  include $(TOPDIR)/rules.mk
  LUCI_TITLE:=LuCI support for Xray
  LUCI_PKGARCH:=all
  PKG_NAME:=luci-app-xray
  PKG_VERSION:=1.0
  PKG_RELEASE:=1

  include $(INCLUDE_DIR)/package.mk

  define Package/luci-app-xray
    SECTION:=luci
    CATEGORY:=LuCI
    TITLE:=LuCI support for Xray
    DEPENDS:=+luci-base
  endef

  define Package/luci-app-xray/description
    LuCI application for Xray.
  endef

  define Build/Compile
    true
  endef

  define Package/luci-app-xray/install
    $(INSTALL_DIR) $(1)/usr/lib/lua/luci/controller
    cp -r ./luci/controller/* $(1)/usr/lib/lua/luci/controller/
    $(INSTALL_DIR) $(1)/usr/lib/lua/luci/view/xray
    cp -r ./luci/view/xray/* $(1)/usr/lib/lua/luci/view/xray/
  endef

  $(eval $(call BuildPackage,luci-app-xray))
EOF

      - name: Configure minimal build
        run: |
          cd sdk
          rm -f .config
          cat >> .config <<EOF
          CONFIG_TARGET_mediatek=y
          CONFIG_TARGET_mediatek_filogic=y
          CONFIG_TARGET_mediatek_filogic_generic=y
          CONFIG_PACKAGE_luci-app-xray=m
          EOF
          make defconfig

      - name: Build luci-app-xray
        run: |
          cd sdk
          make package/luci-app-xray/compile -j$(nproc) V=s

      - name: Collect artifacts
        run: |
          mkdir -p output
          find sdk/bin/packages/ -type f -name "*luci-app-xray*.ipk" -exec cp {} output/ \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-xray-ipk
          path: output/

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: output/*
