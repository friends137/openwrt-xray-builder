name: Build Xray for OpenWrt

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential clang flex bison g++ gawk gcc-multilib \
            gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget

      - name: Download OpenWrt SDK
        run: |
          wget https://downloads.immortalwrt.org/snapshots/targets/mediatek/filogic/immortalwrt-sdk-mediatek-filogic_gcc-14.3.0_musl.Linux-x86_64.tar.zst
          tar -I zstd -xf immortalwrt-sdk-mediatek-filogic_gcc-14.3.0_musl.Linux-x86_64.tar.zst
          mv immortalwrt-sdk-*/ sdk
          cd sdk
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Clone xray feed
        run: |
          cd sdk
          git clone https://github.com/yichya/openwrt-xray.git package/xray

      - name: Configure
        run: |
          cd sdk
          # 强制启用 xray-core 和 luci-app-xray
          echo "CONFIG_PACKAGE_xray-core=m" >> .config
          echo "CONFIG_PACKAGE_luci-app-xray=m" >> .config
          # 删除有问题的依赖
          sed -i '/GENSIO_SSHD/d' .config || true
          sed -i '/PACKAGE_gensio-bin/d' .config || true
          sed -i '/BUSYBOX_CONFIG_PAM/d' .config || true
          make defconfig

      - name: Build
        run: |
          cd sdk
          make package/xray-core/compile -j$(nproc) V=s
          make package/luci-app-xray/compile -j$(nproc) V=s

      - name: Collect artifacts
        run: |
          mkdir -p output
          find sdk/bin/packages/ -type f -name "*xray*.ipk" -exec cp {} output/ \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: xray-ipk
          path: output/

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: output/*
