name: Build Xray for GL-MT6000 (Filogic)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  SDK_URL: https://downloads.immortalwrt.org/snapshots/targets/mediatek/filogic/immortalwrt-sdk-mediatek-filogic_gcc-14.3.0_musl.Linux-x86_64.tar.zst
  FEEDS_CONF: |
    src-git packages https://git.openwrt.org/feed/packages.git
    src-git luci https://git.openwrt.org/project/luci.git
    src-git routing https://git.openwrt.org/feed/routing.git
    src-git telephony https://git.openwrt.org/feed/telephony.git

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repository
      uses: actions/checkout@v4

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zstd build-essential libncurses5-dev libncursesw5-dev \
        zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3

    - name: Download and extract ImmortalWrt SDK
      run: |
        wget ${{ env.SDK_URL }} -O immortalwrt-sdk.tar.zst
        tar -I zstd -xf immortalwrt-sdk.tar.zst --strip-components=1
        rm immortalwrt-sdk.tar.zst

    - name: Setup feeds configuration
      run: echo "${{ env.FEEDS_CONF }}" > feeds.conf

    - name: Update and install feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Check available Xray packages
      run: |
        echo "Available Xray-related packages:"
        ./scripts/feeds list | grep -i xray || echo "No Xray packages found in feeds"
        
        # 尝试安装Xray核心包
        if ./scripts/feeds list | grep -q "xray"; then
          echo "Installing Xray from feeds..."
          ./scripts/feeds install xray
        else
          echo "Xray not available in feeds, trying alternative approach..."
        fi

    - name: Try to compile Xray core package
      run: |
        echo "=== Attempting to compile Xray core ==="
        
        # 尝试编译Xray核心包
        if make package/xray/compile V=sc 2>&1 | head -c 100000 | tee build.log; then
          echo "Xray core compilation completed"
        else
          echo "Xray core compilation failed"
        fi

    - name: Search for any build artifacts
      run: |
        echo "=== Searching for build artifacts ==="
        
        # 搜索所有可能的构建输出
        echo "IPK files:"
        find . -name "*.ipk" -type f | head -20 || echo "No IPK files found"
        
        echo "Build directories:"
        find . -path "*/build_dir/*" -type d | head -5 || echo "No build directories found"
        
        echo "Package directories:"
        find . -path "*/bin/packages/*" -type d | head -5 || echo "No package directories found"
        
        echo "All files in bin directory:"
        find bin/ -type f 2>/dev/null | head -20 || echo "No files in bin directory"

    - name: Create diagnostic report
      run: |
        echo "=== Diagnostic Report ===" > diagnostic.log
        echo "Date: $(date)" >> diagnostic.log
        echo "" >> diagnostic.log
        
        # 检查编译日志
        echo "Compilation status:" >> diagnostic.log
        if tail -20 build.log | grep -q "built\|success\|complete"; then
          echo "  - Compilation reported success" >> diagnostic.log
        else
          echo "  - Compilation may have failed" >> diagnostic.log
        fi
        
        # 检查文件系统
        echo "" >> diagnostic.log
        echo "File system analysis:" >> diagnostic.log
        echo "  - SDK structure:" >> diagnostic.log
        ls -la | head -10 >> diagnostic.log
        echo "" >> diagnostic.log
        echo "  - Package directories:" >> diagnostic.log
        find . -name "package" -type d | head -5 >> diagnostic.log
        echo "" >> diagnostic.log
        echo "  - Makefiles found:" >> diagnostic.log
        find . -name "Makefile" | grep -i xray | head -5 >> diagnostic.log
        
        # 显示报告
        cat diagnostic.log

    - name: Upload diagnostic information
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: diagnostic-info
        path: |
          diagnostic.log
          build.log
        retention-days: 7

    - name: Try alternative approach - download prebuilt packages
      if: always()
      run: |
        echo "=== Attempting to download prebuilt packages ==="
        
        # 尝试从ImmortalWrt仓库下载预编译的Xray包
        BASE_URL="https://downloads.immortalwrt.org/snapshots/packages/aarch64_cortex-a53/packages"
        
        # 尝试下载Xray相关包
        wget -q "$BASE_URL/xray-core_1.8.4-1_aarch64_cortex-a53.ipk" || \
        wget -q "$BASE_URL/xray-core_latest_aarch64_cortex-a53.ipk" || \
        echo "Failed to download prebuilt Xray package"
        
        # 列出下载的文件
        ls -la *.ipk 2>/dev/null || echo "No IPK files downloaded"

    - name: Upload any found or downloaded packages
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: xray-packages
        path: "*.ipk"
        retention-days: 7
